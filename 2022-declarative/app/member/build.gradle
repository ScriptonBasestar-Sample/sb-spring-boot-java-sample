apply plugin: 'application'

bootJar {
    mainClass = 'org.scriptonbasestar.app.member.ApplicationKt'
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}
shadowJar {
    zip64 = true
//    mergeServiceFiles()
//    exclude "META-INF/*.SF"
//    exclude 'META-INF/*.DSA'
//    exclude 'META-INF/*.RSA'
//    exclude "LICENSE*"
}

dependencies {
    implementation project(':core')
//    implementation project(':domain:member')
    implementation project(':domain:board')

//    testImplementation project(':domain').sourceSets.test.output

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation('org.springframework.boot:spring-boot-starter-security') {
//        exclude group: 'org.springframework', module: 'spring-web'
//    }

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-aop'

    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    testImplementation 'org.awaitility:awaitility-kotlin:4.1.0'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.github.fridujo:rabbitmq-mock:1.1.1'
}
