apply plugin: 'application'

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'org.jetbrains.kotlin.plugin.spring'
apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
apply plugin: 'org.jetbrains.kotlin.kapt'
//    apply plugin: 'org.jetbrains.kotlin.plugin.lombok'

apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'org.jlleitschuh.gradle.ktlint-idea'

mainClassName = 'sample.app.MainApplication'
//bootJar {
////    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
//    archiveFileName = "app.${archiveExtension.get()}"
//}
////https://stackoverflow.com/questions/53123012/spring-boot-2-change-jar-name
shadowJar {
    zip64 = true
//    mergeServiceFiles()
//    exclude "META-INF/*.SF"
//    exclude 'META-INF/*.DSA'
//    exclude 'META-INF/*.RSA'
//    exclude "LICENSE*"
}
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}
//    compileKotlin {
//        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
//        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
////        kotlinOptions.freeCompilerArgs += '-Xjsr305=strict'
//    }
//    compileTestKotlin {
//        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
//        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
//    }

dependencies {
    implementation project(':core')
    implementation project(':domain:jpa')
    implementation project(':domain:redis')
    implementation project(':message:rabbitmq')
    implementation project(':message:kafka')

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
//    testImplementation project(':domain').sourceSets.test.output
    ktlintRuleset("com.pinterest.ktlint:ktlint-core:$ktlint_version")
    ktlintRuleset("com.pinterest.ktlint:ktlint-ruleset-standard:$ktlint_version")

//    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation('org.springframework.boot:spring-boot-starter-security') {
//        exclude group: 'org.springframework', module: 'spring-web'
//    }
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
//    implementation 'org.springframework.boot:spring-boot-starter-cache'

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    testImplementation 'org.awaitility:awaitility-kotlin:4.1.0'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'com.github.fridujo:rabbitmq-mock:1.1.1'
}
ktlintCheck.mustRunAfter ktlintFormat
compileKotlin.dependsOn ktlintFormat, ktlintCheck
