apiVersion: v1
kind: Service
metadata:
  name: dev-kafka
  labels:
    app: dev
spec:
  ports:
    - name: kafka
      port: 2181
    - name: zookeeper
      port: 9004
  selector:
    app: dev
    env: workstation
    tier: kafka
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pv-claim
  labels:
    app: dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: dev-kafka
  labels:
    app: dev
spec:
  selector:
    matchLabels:
      app: dev
      env: workstation
      tier: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dev
        env: workstation
        tier: kafka
    spec:
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper
          ports:
            - name: zookeeper
              protocol: TCP
              containerPort: 2181
        - image: wurstmeister/kafka
          name: kafka
          ports:
            - name: kafka
              protocol: TCP
              containerPort: 2181
          env:
            - name: HOSTNAME_COMMAND
              value: "docker info | grep ^Name: | cut -d' ' -f 2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
            - name: KAFKA_LISTENERS
              value: INSIDE://:9092,OUTSIDE://:9094
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE
#          volumeMounts:
#            - name: kafka-persistent-storage
#              mountPath: /var/lib/kafka
#      volumes:
#        - name: kafka-persistent-storage
#          persistentVolumeClaim:
#            claimName: kafka-pv-claim
